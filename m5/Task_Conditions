N-мерный вектор (перегрузка операций)
Продолжение задания N-мерный вектор.

В уже реализованном классе Vec необходимо перегрузить следующие операции:

операцию + сложения двух векторов,
операцию - вычитания двух векторов,
операцию * умножение вектора на действительное число,
операцию = присваивание значений одного вектора другому вектору,
операцию == проверки векторов на равенство,
операцию [ ] индексации элементов вектора,
операцию << вставка в выходной поток.
Сделать описания методов класса отдельно от описания класса.

Складывать векторы с разным количеством координат нельзя, поэтому в этом задании можно считать, что сложение векторов выполняется всегда для векторов с одинаковым количеством координат. Остальные операции (присваивание и сравнение векторов на равенство) можно выполнять для векторов произвольной размерности.

Output format
Вывод координат вектора осуществлять в формате (%lf,%lf,...,%lf,%lf) При выводе вещественных чисел лишних нулей не выводить.

N-мерный вектор (oбработка ошибок)
Для класса Vec (смотри задание N-мерный вектор) обработать все возможные ошибки, кроме ошибки выделения памяти. Ошибки обрабатывать при помощи исключений.

Варианты ошибок для обработки:

в конструкторе передано некорректное число элементов.
в методах get() и set() передан неправильный номер координаты.
любую другую ошибку.
Вместе с описанием класса (или классов) обязательно должна быть функция main() следующего вида.

int main()

{

try

{

error();

}

catch( ) { ... }

...

return 0;

}

В функции main() catch один или несколько описать самостоятельно.

В этом задании обрабатываем только ошибки методов, ошибки операций обрабатываем в следующем

Output format
Если ошибка в конструкторе, (некорректная длина) то вывод: Exception: length error
Если ошибка в методе get(), (некорректная координата) то длина: Exception: coordinate error in get()
Если ошибка в методе set(), (некорректная координата) то длина: Exception: coordinate error in set()
Если любая другая ошибка, то вывод: Exception: unknown error
Вывод сообщений об ошибках нужно осуществлять в stderr, любой другой вывод в stdout

////////m7

N-мерный вектор (oбработка ошибок операций)
Для класса Vec (смотри задание N-мерный вектор (перегрузка операций) и N-мерный вектор (oбработка ошибок)) нужно добавить обработку всех возможных ошибок, которые возникают в результате перегрузки операций. Ошибки обрабатывать при помощи исключений.

В частности:

сложение векторов разной длины.
неправильная индексация
В этом задании обязательно должен быть реализован класс для обработки ошибок или несколько классов для обработки ошибок.

Вместе с описанием класса (или классов) обязательно должна быть функция main() следующего вида.

int main()

{

try

{

error();

}

catch( ) { ... }

...

return 0;

}

В функции main() catch один или несколько описать самостоятельно.

Output format
Если ошибка при сложении вектров, то выводить Exception: addition of vectors of different lengths: %d %d ( %d %d длина первого и второго вектора )
Если ошибка в координате вектора, то выводить Exception: incorrect indexing: %d ( %d некорректный индекс).
Если любая другая ошибка, что вывод: Exception: unknown error
Вывод сообщений об ошибках нужно осуществлять в stderr, любой другой вывод в stdout

Examples
Input
void error()
{
     Vec v1(3), v2(5), v3(4);

      v3 = v1+v2;

}
Output
Exception: addition of vectors of different lengths: 3 5
Input
void error()
{
    Vec v(5);
    double a = v[7];
}
Output
Exception: incorrect indexing: 7
